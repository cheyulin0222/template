<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <springProperty scope="context" name="awsRegion" source="cloud.aws.region.static"/>
    <springProperty scope="context" name="awsAccessKey" source="cloud.aws.credentials.access-key"/>
    <springProperty scope="context" name="awsSecretKey" source="cloud.aws.credentials.secret-key"/>
    <springProperty scope="context" name="logGroupName" source="aws.cloudwatch.log-group-name"/>
    <springProperty scope="context" name="logStreamPrefix" source="aws.cloudwatch.log-stream-prefix"/>

    <!-- 輸出路徑 -->
    <springProperty name="logging.path" source="logging.file.path" defaultValue="./logs/"/>

    <timestamp key="date" datePattern="yyyy-MM-dd-HH" timeZone="Asia/Taipei"/>

    <!-- 彩色日誌配置 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <property name="CONSOLE_LOG_PATTERN" value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n" />

    <!-- Console Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- File Appenders -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logging.path}/adl-apps-nmns_info.log</file>
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logging.path}/web-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- WARN File Appender -->
    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logging.path}/adl-apps-nmns_warn.log</file>
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logging.path}/web-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>warn</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- ERROR File Appender -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logging.path}/adl-apps-nmns_error.log</file>
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logging.path}/web-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- AWS CloudWatch Appender -->
    <appender name="AWS_LOGS" class="ca.pjer.logback.AwsLogsAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%m%n</pattern>
        </layout>
        <logGroupName>${logGroupName}</logGroupName>
        <logStreamName>${logStreamPrefix}-${date}</logStreamName>
        <!-- CloudWatch 每個 Log Stream 每秒最多可以呼叫 5 次 PutLogEvents -->
        <!-- CloudWatch 單次請求上限 1 MB -->
        <!-- CloudWatch 每個日誌事件上限 256 KB -->
        <!-- CloudWatch 單次事件上限 10,000 條 -->
        <!-- 一次批次可以發送的最大日誌事件數量 -->
        <!-- 累積的日誌事件達到 50 條時，就會觸發一次發送 -->
        <maxBatchLogEvents>50</maxBatchLogEvents>
        <!-- 定義了強制發送日誌的最大時間間隔(30秒) -->
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>
        <region>${awsRegion}</region>
        <accessKeyId>${awsAccessKey}</accessKeyId>
        <secretAccessKey>${awsSecretKey}</secretAccessKey>

        <filter class="ch.qos.logback.classic.filter.LoggerNameFilter">
            <loggerName>com.arplanet.template</loggerName>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 開發環境 -->
    <springProfile name="dev">
        <root level="info">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="INFO_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
            <appender-ref ref="WARN_FILE"/>
        </root>
    </springProfile>

    <!-- 測試環境 -->
    <springProfile name="test">
        <root level="info">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="AWS_LOGS"/>
        </root>
    </springProfile>

    <!-- 正式環境 -->
    <springProfile name="prod">
        <root level="info">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="AWS_LOGS"/>
        </root>
    </springProfile>
</configuration>